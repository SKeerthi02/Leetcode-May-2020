************not so fast approach using counter********************
class Solution:
    def canConstruct(self, ransomNote: str, magazine: str) -> bool:
        rn = collections.Counter(ransomNote)
        mg = collections.Counter(magazine)
        
        for key in rn:
            if rn[key] > mg[key]:
                return False
        return True
   
************************** optimized ************************


class Solution:
    def canConstruct(self, ransomNote: str, magazine: str) -> bool:
        
        for char in ransomNote:
            if char not in magazine:
                return False
            magazine = magazine.replace(char,"", 1)
        return True
        
***************************** very slow *******************************

class Solution:
    def canConstruct(self, ransomNote: str, magazine: str) -> bool:
        
        for char in ransomNote:
            if ransomNote.count(char) > magazine.count(char):
                return False
        return True
